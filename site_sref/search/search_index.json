{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#welcome-to-mj6_sref-documentation","title":"Welcome to MJ6_SREF Documentation","text":""},{"location":"core/","title":"Directory: <code>C:/MJ6_SREF/app/core</code>","text":""},{"location":"core/#file-configpy","title":"File: <code>config.py</code>","text":""},{"location":"core/#imports","title":"Imports:","text":"<ul> <li>import os</li> <li>from pydantic import BaseSettings</li> </ul>"},{"location":"core/#classes","title":"Classes:","text":"<ul> <li>Class: <code>Settings</code> (line 5)</li> </ul> <p>```python   class Settings(BaseSettings):     SECRET_KEY: str = os.getenv('SECRET_KEY')     DATABASE_URL: str = os.getenv('DATABASE_URL')     GITHUB_CLIENT_ID: str = os.getenv('GITHUB_CLIENT_ID')     GITHUB_CLIENT_SECRET: str = os.getenv('GITHUB_CLIENT_SECRET')</p> <p>```</p>"},{"location":"core/#variablesconstants","title":"Variables/Constants:","text":"<pre><code>settings = Settings()\n</code></pre> <p>Click here to open the markmap file in a new tab</p>"},{"location":"db/","title":"Directory: <code>C:/MJ6_SREF/app/db</code>","text":""},{"location":"db/#file-basepy","title":"File: <code>base.py</code>","text":""},{"location":"db/#imports","title":"Imports:","text":"<ul> <li>from sqlalchemy.ext.declarative import declarative_base</li> </ul>"},{"location":"db/#variablesconstants","title":"Variables/Constants:","text":"<pre><code>Base = declarative_base()\n</code></pre>"},{"location":"db/#file-sessionpy","title":"File: <code>session.py</code>","text":""},{"location":"db/#imports_1","title":"Imports:","text":"<ul> <li>from sqlalchemy import create_engine</li> <li>from sqlalchemy.orm import sessionmaker</li> <li>import os</li> </ul>"},{"location":"db/#functions","title":"Functions:","text":"<ul> <li>Function: <code>get_db</code> (line 11)</li> </ul> <p>```python   def get_db():     db = SessionLocal()     try:         yield db     finally:         db.close()</p> <p>```</p>"},{"location":"db/#variablesconstants_1","title":"Variables/Constants:","text":"<pre><code>DATABASE_URL = os.getenv(\"DATABASE_URL\", \"sqlite:///./test.db\")\n</code></pre> <pre><code>engine = create_engine(DATABASE_URL)\n</code></pre> <pre><code>SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)\n</code></pre> <pre><code>db = SessionLocal()\n</code></pre> <p>Click here to open the markmap file in a new tab</p>"},{"location":"models/","title":"Directory: <code>C:/MJ6_SREF/app/models</code>","text":""},{"location":"models/#file-imagepy","title":"File: <code>image.py</code>","text":""},{"location":"models/#imports","title":"Imports:","text":"<ul> <li>from sqlalchemy import Column, Integer, String</li> <li>from app.db.base import Base</li> </ul>"},{"location":"models/#functions","title":"Functions:","text":"<ul> <li>Function: <code>__repr__</code> (line 11)</li> </ul> <p>```python       def repr(self):         return f\"\"</p> <p>```</p>"},{"location":"models/#classes","title":"Classes:","text":"<ul> <li>Class: <code>Image</code> (line 4)</li> </ul> <p>```python   class Image(Base):     tablename = \"images\"</p> <pre><code>id = Column(Integer, primary_key=True, index=True)\nfile_name = Column(String, index=True)\nfile_path = Column(String)\n\ndef __repr__(self):\n    return f\"&lt;Image(id={self.id}, file_name={self.file_name})&gt;\"\n</code></pre> <p>```</p>"},{"location":"models/#variablesconstants","title":"Variables/Constants:","text":"<pre><code>__tablename__ = \"images\"\n</code></pre> <pre><code>id = Column(Integer, primary_key=True, index=True)\n</code></pre> <pre><code>file_name = Column(String, index=True)\n</code></pre> <pre><code>file_path = Column(String)\n</code></pre>"},{"location":"models/#file-image_parameterpy","title":"File: <code>image_parameter.py</code>","text":""},{"location":"models/#imports_1","title":"Imports:","text":"<ul> <li>from sqlalchemy import Column, Integer, String</li> <li>from app.db.base import Base</li> </ul>"},{"location":"models/#classes_1","title":"Classes:","text":"<ul> <li>Class: <code>ImageParameter</code> (line 4)</li> </ul> <p>```python   class ImageParameter(Base):     tablename = \"image_parameters\"</p> <pre><code>id = Column(Integer, primary_key=True, index=True)\nfile_name = Column(String, index=True)\nfile_path = Column(String)\nsref_number = Column(Integer)\nsref_description = Column(String)\ntwitter_id = Column(String)\n</code></pre> <p>```</p>"},{"location":"models/#variablesconstants_1","title":"Variables/Constants:","text":"<pre><code>__tablename__ = \"image_parameters\"\n</code></pre> <pre><code>id = Column(Integer, primary_key=True, index=True)\n</code></pre> <pre><code>file_name = Column(String, index=True)\n</code></pre> <pre><code>file_path = Column(String)\n</code></pre> <pre><code>sref_number = Column(Integer)\n</code></pre> <pre><code>sref_description = Column(String)\n</code></pre> <pre><code>twitter_id = Column(String)\n</code></pre>"},{"location":"models/#file-userpy","title":"File: <code>user.py</code>","text":""},{"location":"models/#imports_2","title":"Imports:","text":"<ul> <li>from sqlalchemy import Column, Integer, String</li> <li>from app.db.base import Base</li> </ul>"},{"location":"models/#classes_2","title":"Classes:","text":"<ul> <li>Class: <code>User</code> (line 4)</li> </ul> <p>```python   class User(Base):     tablename = \"users\"</p> <pre><code>id = Column(Integer, primary_key=True, index=True)\nemail = Column(String, unique=True, index=True)\nhashed_password = Column(String)\n</code></pre> <p>```</p>"},{"location":"models/#variablesconstants_2","title":"Variables/Constants:","text":"<pre><code>__tablename__ = \"users\"\n</code></pre> <pre><code>id = Column(Integer, primary_key=True, index=True)\n</code></pre> <pre><code>email = Column(String, unique=True, index=True)\n</code></pre> <pre><code>hashed_password = Column(String)\n</code></pre> <p>Click here to open the markmap file in a new tab</p>"},{"location":"schemas/","title":"Directory: <code>C:/MJ6_SREF/app/schemas</code>","text":""},{"location":"schemas/#file-imagepy","title":"File: <code>image.py</code>","text":""},{"location":"schemas/#imports","title":"Imports:","text":"<ul> <li>from pydantic import BaseModel</li> <li>from sqlalchemy import Column, Integer, String</li> <li>from app.db.base import Base</li> </ul>"},{"location":"schemas/#classes","title":"Classes:","text":"<ul> <li>Class: <code>ImageCreate</code> (line 5)</li> </ul> <p>```python   class ImageCreate(BaseModel):     parameter: str     description: str     x_id: str</p> <p>```</p> <ul> <li>Class: <code>ImageResponse</code> (line 10)</li> </ul> <p>```python   class ImageResponse(BaseModel):     id: int     parameter: str     description: str     x_id: str     file_url: str</p> <pre><code>class Config:\n    orm_mode = True\n</code></pre> <p>```</p> <ul> <li>Class: <code>Config</code> (line 17)</li> </ul> <p>```python       class Config:         orm_mode = True</p> <p>```</p>"},{"location":"schemas/#variablesconstants","title":"Variables/Constants:","text":"<pre><code>orm_mode = True\n</code></pre>"},{"location":"schemas/#file-image_parameterpy","title":"File: <code>image_parameter.py</code>","text":""},{"location":"schemas/#imports_1","title":"Imports:","text":"<ul> <li>from pydantic import BaseModel</li> </ul>"},{"location":"schemas/#classes_1","title":"Classes:","text":"<ul> <li>Class: <code>ImageParameterBase</code> (line 3)</li> </ul> <p>```python   class ImageParameterBase(BaseModel):     file_name: str     sref_number: int     sref_description: str     twitter_id: str</p> <p>```</p> <ul> <li>Class: <code>ImageParameterCreate</code> (line 9)</li> </ul> <p>```python   class ImageParameterCreate(ImageParameterBase):     pass</p> <p>```</p> <ul> <li>Class: <code>ImageParameterResponse</code> (line 12)</li> </ul> <p>```python   class ImageParameterResponse(ImageParameterBase):     id: int</p> <pre><code>class Config:\n    orm_mode = True\n</code></pre> <p>```</p> <ul> <li>Class: <code>Config</code> (line 15)</li> </ul> <p>```python       class Config:         orm_mode = True</p> <p>```</p>"},{"location":"schemas/#variablesconstants_1","title":"Variables/Constants:","text":"<pre><code>orm_mode = True\n</code></pre>"},{"location":"schemas/#file-userpy","title":"File: <code>user.py</code>","text":""},{"location":"schemas/#imports_2","title":"Imports:","text":"<ul> <li>from pydantic import BaseModel</li> <li>from pydantic import BaseModel</li> </ul>"},{"location":"schemas/#classes_2","title":"Classes:","text":"<ul> <li>Class: <code>User</code> (line 3)</li> </ul> <p>```python   class User(BaseModel):     email: str     password: str</p> <p>```</p> <ul> <li>Class: <code>UserCreate</code> (line 7)</li> </ul> <p>```python   class UserCreate(User):     pass</p> <p>```</p> <p>Click here to open the markmap file in a new tab</p>"},{"location":"services/","title":"Directory: <code>C:/MJ6_SREF/app/services</code>","text":""},{"location":"services/#file-image_servicepy","title":"File: <code>image_service.py</code>","text":""},{"location":"services/#imports","title":"Imports:","text":"<ul> <li>import os</li> <li>from fastapi import UploadFile</li> <li>from pathlib import Path</li> </ul>"},{"location":"services/#functions","title":"Functions:","text":"<ul> <li>Function: <code>upload_image</code> (line 3)</li> </ul> <p>```python   def upload_image(image_data, file, db, user):     # Logic for image upload     return {\"message\": \"Image uploaded successfully\"}</p> <p>```</p> <ul> <li>Function: <code>save_file</code> (line 15)</li> </ul> <p>```python   def save_file(file: UploadFile, destination_dir: str = UPLOAD_DIRECTORY) -&gt; str:     # Ensure the upload directory exists     Path(destination_dir).mkdir(parents=True, exist_ok=True)</p> <pre><code>file_path = os.path.join(destination_dir, file.filename)\n\n# Write the file to the specified directory\nwith open(file_path, \"wb\") as buffer:\n    buffer.write(file.file.read())\n\nreturn file_path  # Return the full path of the saved file\n</code></pre> <p>```</p>"},{"location":"services/#variablesconstants","title":"Variables/Constants:","text":"<pre><code>UPLOAD_DIRECTORY = \"uploads/\"\n</code></pre> <pre><code>file_path = os.path.join(destination_dir, file.filename)\n</code></pre>"},{"location":"services/#file-user_servicepy","title":"File: <code>user_service.py</code>","text":""},{"location":"services/#functions_1","title":"Functions:","text":"<ul> <li>Function: <code>get_current_user</code> (line 3)</li> </ul> <p><code>python   def get_current_user():     # Example function for user authentication     return {\"email\": \"test@example.com\"}</code></p> <p>Click here to open the markmap file in a new tab</p>"},{"location":"v1/","title":"Directory: <code>C:/MJ6_SREF/app/api/v1</code>","text":""},{"location":"v1/#file-endpointspy","title":"File: <code>endpoints.py</code>","text":""},{"location":"v1/#imports","title":"Imports:","text":"<ul> <li>from app.services.image_service import save_file</li> <li>from fastapi import APIRouter, Depends, Form, HTTPException, status, File, UploadFile, Request</li> <li>from sqlalchemy.orm import Session</li> <li>from app.schemas.image import ImageCreate, ImageResponse</li> <li>from app.models.image_parameter import ImageParameter</li> <li>from fastapi.staticfiles import StaticFiles</li> <li>import shutil</li> <li>import os</li> <li>from app.db.session import get_db</li> </ul>"},{"location":"v1/#functions","title":"Functions:","text":"<ul> <li>Function: <code>get_db</code> (line 17)</li> </ul> <p>```python       def get_db():         pass</p> <p>```</p>"},{"location":"v1/#variablesconstants","title":"Variables/Constants:","text":"<pre><code>router = APIRouter()\n</code></pre> <pre><code>UPLOAD_DIR = \"uploads/\"\n</code></pre> <pre><code>images = db.query(ImageParameter).all()\n</code></pre> <pre><code>image_responses = []\n</code></pre> <pre><code>image = db.query(ImageParameter).filter(ImageParameter.id == image_id).first()\n</code></pre> <pre><code>file_path = save_file(file, UPLOAD_DIR)\n</code></pre> <pre><code>image = ImageParameter(\n          file_name=file.filename,\n          file_path=file_path,\n          sref_number=sref_number,\n          sref_description=sref_description,\n          twitter_id=twitter_id\n      )\n</code></pre> <pre><code>file_url = f\"{UPLOAD_DIR}{file.filename}\"\n</code></pre> <pre><code>file_url = f\"{UPLOAD_DIR}{image.file_name}\"\n</code></pre> <p>Click here to open the markmap file in a new tab</p>"}]}